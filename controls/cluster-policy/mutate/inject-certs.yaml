apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-certificates-volume
  annotations:
    policies.kyverno.io/title: Add Certificates as a Volume
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod,Volume
    kyverno.io/kyverno-version: 1.5.2
    kyverno.io/kubernetes-version: "1.21"
    policies.kyverno.io/minversion: 1.5.0
    pod-policies.kyverno.io/autogen-controllers: DaemonSet,Deployment,Job,StatefulSet
    policies.kyverno.io/description: >-
      In some cases you would need to trust custom CA certificates for all the containers of a Pod.
      We can use the cert-manager-csi-driver to install them as inline volumes.
      This policy adds a volume to all containers in a Pod containing the certificate if the annotation
      called `inject-certs` with value `enabled` is found.

      NOTE: You need to specify a non-default serviceAccountName to use this.
      AND that serviceAccountName must equal your service name. (this is for DNS)
spec:
  background: false
  rules:
  - name: add-ssl-certs
    match:
      resources:
        kinds:
        - Pod
    preconditions:
      all:
      - key: '{{request.object.metadata.annotations."inject-certs"}}'
        operator: Equals
        value: enabled
      - key: '{{request.object.spec.serviceAccountName}}'
        operator: NotEquals
        value: ""
      - key: '{{request.object.spec.serviceAccountName}}'
        operator: NotEquals
        value: default
      - key: "{{request.operation}}"
        operator: In
        value:
          - CREATE
          - UPDATE
    mutate:
      foreach:
      - list: "request.object.spec.containers"
        patchStrategicMerge:
          spec:
            containers:
            - name: "{{ element.name }}"
              volumeMounts:
              - name: etc-ssl-certs
                mountPath: /etc/ssl/certs
            volumes:
              - name: etc-ssl-certs
                csi:
                  driver: csi.cert-manager.io
                  readOnly: true
                  volumeAttributes:
                    csi.cert-manager.io/fs-group: "2000"
                    csi.cert-manager.io/issuer-kind: ClusterIssuer
                    csi.cert-manager.io/issuer-name: ca-issuer
                    csi.cert-manager.io/dns-names: >-
                      ${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE}.svc.cluster.local,${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE}.svc.cluster,${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE}.svc,${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE},${SERVICE_ACCOUNT_NAME}
                    csi.cert-manager.io/uri-sans: "spiffe://cluster.local/ns/${POD_NAMESPACE}/pod/${POD_NAME}/${POD_UID}"
